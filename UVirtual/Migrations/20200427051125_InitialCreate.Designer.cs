// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UVirtual.Data;

namespace UVirtual.Migrations
{
    [DbContext(typeof(UVirtualContext))]
    [Migration("20200427051125_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UVirtual.Models.Escenario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmocionMeta")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("NotaMeta")
                        .HasColumnType("int");

                    b.Property<int>("TiempoMeta")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Escenario");
                });

            modelBuilder.Entity("UVirtual.Models.Partida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmocionAcomulada")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotaAcomulada")
                        .HasColumnType("int");

                    b.Property<int>("TiempoAcomulado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Partida");
                });

            modelBuilder.Entity("UVirtual.Models.Personaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolID");

                    b.ToTable("Personaje");
                });

            modelBuilder.Entity("UVirtual.Models.Respuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmocionCambio")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("NotaCambio")
                        .HasColumnType("int");

                    b.Property<int>("SituacionID")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TiempoCambio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SituacionID");

                    b.ToTable("Respuesta");
                });

            modelBuilder.Entity("UVirtual.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EscenarioID")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EscenarioID");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("UVirtual.Models.Situacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<bool>("Inicio")
                        .HasColumnType("bit");

                    b.Property<string>("Texto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Situacion");
                });

            modelBuilder.Entity("UVirtual.Models.Tarjeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonajeID")
                        .HasColumnType("int");

                    b.Property<int>("Respuesta2ID")
                        .HasColumnType("int");

                    b.Property<int>("RespuestaID")
                        .HasColumnType("int");

                    b.Property<int>("SituacionID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonajeID");

                    b.HasIndex("Respuesta2ID");

                    b.HasIndex("RespuestaID");

                    b.HasIndex("SituacionID");

                    b.ToTable("Tarjeta");
                });

            modelBuilder.Entity("UVirtual.Models.Personaje", b =>
                {
                    b.HasOne("UVirtual.Models.Rol", "Rol")
                        .WithMany("Personajes")
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UVirtual.Models.Respuesta", b =>
                {
                    b.HasOne("UVirtual.Models.Situacion", "Situacion")
                        .WithMany("Respuestas")
                        .HasForeignKey("SituacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UVirtual.Models.Rol", b =>
                {
                    b.HasOne("UVirtual.Models.Escenario", "Escenario")
                        .WithMany("Roles")
                        .HasForeignKey("EscenarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UVirtual.Models.Tarjeta", b =>
                {
                    b.HasOne("UVirtual.Models.Personaje", "Personaje")
                        .WithMany("Tarjetas")
                        .HasForeignKey("PersonajeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UVirtual.Models.Respuesta", "Respuesta2")
                        .WithMany()
                        .HasForeignKey("Respuesta2ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UVirtual.Models.Respuesta", "Respuesta")
                        .WithMany()
                        .HasForeignKey("RespuestaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UVirtual.Models.Situacion", "Situacion")
                        .WithMany("Tarjetas")
                        .HasForeignKey("SituacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
